rel()
  position relative

abs( $top = 0, $left = 0 )
  position absolute
  top $top
  left $left

clearfix()
  &:before
  &:after
    content: ""
    display: table
  &:after
    clear: both

ib()
  display inline-block
  vertical-align top

after()
  &:after
    clear both
    content "."
    display block
    height 0
    visibility hidden

box-sizing( box )
  -webkit-box-sizing box
  -moz-box-sizing box
  box-sizing box

border-radius(n)
  -webkit-border-radius n
  -moz-border-radius n
  border-radius n

transition( val )
  transition val
  -webkit-transition val
  -moz-transition val
  -ms-transition val

transform( val )
  transform val
  -webkit-transform val
  -moz-transform val
  -ms-transform val
  
opacity( val )
  opacity val
  -webkit-opacity val
  -moz-opacity val

justify-content(val)
  -webkit-box-pack val
  -webkit-justify-content val
  justify-content val

align-items(val)
  -webkit-box-align val
  -webkit-align-items val
  align-items val

flex-direction(val)
  -webkit-flex-direction val
  flex-direction val

flex-wrap(val)
  -webkit-flex-wrap val
  -moz-flex-wrap val
  -ms-flex-wrap val
  -o-flex-wrap val
  flex-wrap val

flex-flow(val)
  -webkit-flex-flow val
  flex-flow val

align-content(val)
  -webkit-align-content val
  align-content val

flex-basis(val)
  -webkit-flex-basis val
  flex-basis val

flex(val)
  -webkit-flex val
  -ms-flex val
  flex val

align-self(val)
  -webkit-align-self val
  align-self val



calc() {
  calc-vendors = webkit moz;

  if current-property {

    for prefix in calc-vendors {
      add-property(current-property[0], s('-%s-calc(%s)', prefix, arguments));
    }
    s('calc(%s)', arguments);
  } else {
    error('calc() must be used within a property');
  }
}

